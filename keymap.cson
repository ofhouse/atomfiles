# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

# All platform stuff
'atom-workspace':
  'ctrl-tab'      : 'tab-switcher:next'
  'cmd-shift-tab' : 'pane:show-previous-item'

'atom-text-editor':
  'cmd-up'        : 'editor:move-line-up'
  'cmd-down'      : 'editor:move-line-down'

# OS X Stuff
'.platform-darwin':

  # Move the current pane item to the target split pane
  'cmd-ctrl-shift-left':  'window:move-active-item-to-pane-on-left'
  'cmd-ctrl-shift-right': 'pane:split-right-and-move-active-item'

'.platform-darwin atom-text-editor':
  'cmd-i': 'editor:auto-indent'
  'cmd-#': 'editor:toggle-line-comments'

# Windows / Linux stuff
'.platform-win32, .platform-linux':

  # Move the current pane item to the target split pane
  'alt-ctrl-shift-left':  'window:move-active-item-to-pane-on-left'
  'alt-ctrl-shift-right': 'pane:split-right-and-move-active-item'

'.platform-win32 atom-text-editor, .platform-linux atom-text-editor':
  'ctrl-i'        : 'editor:auto-indent'
